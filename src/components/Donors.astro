---
const donors = [
  {
    name: "Jonas Platte",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Manuel Volk",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Johannes Smit",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Yuval Nehemia",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Gerrit Vollmer",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Bastian Wilhelm",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Jan Philipp Schrewe",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Philipp Bielefeldt",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Christian Becker",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Fabien Maury",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Jody Phillips",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Hubert Winkler",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Eugenio Restani",
    github: "",
    profile: "",
    avatar: "",
  },
  {
    name: "Rob",
    github: "",
    profile: "",
    avatar: "",
  },
];

const { lang } = Astro.props;

import { getEntry } from "astro:content";

const strings = await getEntry("strings", `${lang}/strings`);
---

<section class="wrapper">
  <h1>{strings?.data.donors.title}</h1>
  <p>{strings?.data.donors.description}</p>
  <div class="avatars">
    {
      donors.map((donor) => (
        <a href={donor.profile}>
          {donor.avatar ? (
            <img
              src={donor.avatar}
              alt={donor.name + "avatar"}
              width="64"
              height="64"
            />
          ) : (
            <p class="default-avatar">
              {donor.name
                .split(" ")
                .map((n) => n[0])
                .join(".")}
            </p>
          )}
          <h2>{donor.name}</h2>
        </a>
      ))
    }
  </div>
</section>

<style>
  section h1 {
    text-align: center;
    font-size: var(--fs-lg);
    font-weight: 600;
    color: var(--primary);
  }

  section > p {
    text-align: justify;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
  }

  .avatars {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    place-content: center;
    gap: 1rem;
  }

  @media (width < 40em) {
    .avatars {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .avatars > a {
    font-size: var(--fs-xs);
    font-weight: 600;
    text-decoration: none;
    text-align: center;
    color: var(--on-surface);

    display: grid;
    place-items: center;
    gap: 0.5rem;
  }

  .avatars > a > img {
    border-radius: 50%;
  }

  .default-avatar {
    width: 64px;
    height: 64px;
    border-radius: 50%;
    background-color: var(--surface-container-highest);
    display: grid;
    place-content: center;
  }
</style>
